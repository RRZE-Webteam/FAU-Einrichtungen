/*
Mixins File for Wordpress Theme FAU
*/

@mixin box-shadow($shadow) {
    box-shadow: $shadow;
}

@mixin border-radius($radius) {
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
   border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

@mixin linear-gradient($fromColor, $toColor) {
    background-color: $fromColor; /* Fallback Color */
    background-image: linear-gradient(to right, $fromColor, $toColor);
}
@mixin linear-top-gradient($fromColor, $toColor) {
    background-color: $fromColor; /* Fallback Color */
    background-image: linear-gradient(to bottom, $fromColor, $toColor);
}
@mixin linear-gradient-three($fromColor, $toColor, $nextColor) {
    background-color: $fromColor; /* Fallback Color */
    background-image: linear-gradient(to right, $fromColor, $toColor,$nextColor);
}
@mixin linear-top-gradient-three($fromColor, $toColor, $nextColor) {
    background-color: $fromColor; /* Fallback Color */
    background-image: linear-gradient(to bottom, $fromColor, $toColor,$nextColor);
}

@mixin radial-gradient($color2, $color1) {
    background: $color2;
    background: radial-gradient(ellipse at center, $color1 0%,$color2 100%);
}

@mixin radial-gradient-image($color2, $color1, $image) {
    background-color: $color2;
    background: $image, $color2;
    background: $image, radial-gradient(ellipse at center, $color1 0%,$color2 100%);
}

@mixin transition($duration, $params) {
    transition: $duration $params;
}
@mixin transform-translate($tx, $ty) {
    transform: translate($tx, $ty);
}

@mixin hyphens($value) {
    hyphens: $value;
}

@mixin placeholder($color) {
    ::placeholder {
	    color: $color;
    }
}

@mixin no-list() {
    list-style: none;
    margin: 0;
    padding: 0;
    background: none;

    &:before {
	    display: none;
    }
}

@mixin anglelist() {
    @include no-list;
    background: none;
    display: table;
    border-bottom: 1px solid $colorLightest;
    width: 100%;
			

    &:before {
	@extend .fa;
	@extend .fa-angle-right;	
	font-weight: bold;
	display: table-cell;
	vertical-align: middle;
	color: $colorDefault;
	width: 5px;
    }
		
    a {
	    text-decoration: none;
	    display: table-cell;
	    padding: 5px 12px;
	    font-size: 13px;
	    line-height: 16px;
    }

    a:hover, a:focus {
	    text-decoration: none;
	    background-color: $colorLightest;
    }
}

@mixin inline-block() {
    display: inline-block; 
}
@mixin hideout() {
    position:absolute;
    left:-10000px;
    top:auto;
    width:1px;
    height:1px;
    overflow:hidden;
}

@function px2rem($font-size, $base-font-size: $font-size-gridbase) {
	@return $font-size / $base-font-size + rem;
}

@mixin px2rem($font-size, $base-font-size: $font-size-gridbase, $line: $font-size * 1.46) {
  font-size: $font-size + px; // f√ºr den IE8
  line-height: ($line) + px;
  font-size: px2rem($font-size, $base-font-size);
  line-height: ($line / $base-font-size) + rem;
}

@mixin morelink() {
    margin: 10px 0 0 0;
    color: $colorButton;
    padding: 8px 10px;
    text-decoration: none;
    @include border-radius(3px);
    @include px2rem($font-size-textbuttons);

    a {
	@include inline-block;
	@include border-radius(3px);
	@include px2rem($font-size-textbuttons);
	
	color: $colorButton;
	background: $colorButtonBackground;
	padding: 6px 10px;
	text-decoration: none;

	
	&:hover, &:focus {
		background: $colorButtonBackgroundHover;
		text-decoration: none;
	}
    }

}



// Set Font Style

@mixin fontFace($family,$src,$weight: normal,$style: normal,$withlocal: true) {   
  @font-face {
    font-family: $family;
     @if $withlocal {
	src: local($family), 
	url('#{$src}.woff2') format('woff2'), 
	url('#{$src}.woff') format('woff'),
	url('#{$src}.ttf') format('truetype');
     } @else {
	src: url('#{$src}.woff2') format('woff2'), 
	url('#{$src}.woff') format('woff'),
	url('#{$src}.ttf') format('truetype');
     }

    font-style: $style;
    font-weight: $weight;
  }
}


// Only display content to screen readers
//
// See: https://a11yproject.com/posts/how-to-hide-content/
// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

