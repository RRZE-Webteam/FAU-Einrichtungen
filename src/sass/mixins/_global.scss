/*----------------------------------------------------------------------------*/
/* _global 
/* Created on : 06.11.2024, 12:45:02
/*----------------------------------------------------------------------------*/
@use "sass:math";

@mixin box-shadow($shadow) {
    box-shadow: $shadow;
}

@mixin border-radius($radius) {
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin border-top-radius($radius) {
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}

@mixin border-right-radius($radius) {
    border-bottom-right-radius: $radius;
    border-top-right-radius: $radius;
    background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
    background-clip: padding-box;
}

@mixin border-left-radius($radius) {
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}

@mixin linear-gradient($fromColor, $toColor) {
    background-color: $fromColor;
    /* Fallback Color */
    background-image: linear-gradient(to right, $fromColor, $toColor);
}

@mixin linear-top-gradient($fromColor, $toColor) {
    background-color: $fromColor;
    /* Fallback Color */
    background-image: linear-gradient(to bottom, $fromColor, $toColor);
}

@mixin linear-gradient-three($fromColor, $toColor, $nextColor) {
    background-color: $fromColor;
    /* Fallback Color */
    background-image: linear-gradient(to right, $fromColor, $toColor, $nextColor);
}

@mixin linear-top-gradient-three($fromColor, $toColor, $nextColor) {
    background-color: $fromColor;
    /* Fallback Color */
    background-image: linear-gradient(to bottom, $fromColor, $toColor, $nextColor);
}

@mixin radial-gradient($color2, $color1) {
    background: $color2;
    background: radial-gradient(ellipse at center, $color1 0%, $color2 100%);
}

@mixin radial-gradient-image($color2, $color1, $image) {
    background-color: $color2;
    background: $image, $color2;
    background: $image, radial-gradient(ellipse at center, $color1 0%, $color2 100%);
}

@mixin transition($duration, $params) {
    transition: $duration $params;
}

@mixin transform-translate($tx, $ty) {
    transform: translate($tx, $ty);
}


@mixin placeholder($color) {
    ::placeholder {
        color: $color;
    }
}

@mixin no-list() {
    list-style: none;
    margin: 0;
    padding: 0;
    background: none;

    &:before {
        display: none;
    }
}


@mixin inline-block() {
    display: inline-block;
}

@mixin hideout() {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

@function px2rem($font-size, $base-font-size: $font-size-gridbase) {
    @return math.div($font-size, $base-font-size)+rem;
}

@mixin px2rem($font-size, $base-font-size: $font-size-gridbase, $line: $font-size * 1.51) {
    // font-size: $font-size + px; // f√ºr den IE8
    // line-height: ($line) + px;
    font-size: math.div(ceil(math.div($font-size, $base-font-size) * 1000), 1000) + rem;
    //   line-height: math.div(ceil(math.div($line, $base-font-size) * 1000), 1000) + rem;
    // proportionaler defaultwert aus body wird verwendet, statt immer neu zu 
    // berechnen und somit viele Codezeilen zu erzeugen.
}

@mixin morelink() {
    margin: 10px 0 0 0;
    padding: 8px 10px;
    text-decoration: none;
    @include border-radius(var(--border-radius-buttons, 3px));
    @include px2rem($font-size-textbuttons);

    a {
        @include inline-block;
        @include border-radius(var(--border-radius-buttons, 3px));
        @include px2rem($font-size-textbuttons);
        @include buttoncolor();
        padding: 6px 10px;
        text-decoration: none;
    }

}

@mixin defaultlinkstyle() {
    box-shadow: none;
    transition: text-decoration .1s ease;
    padding: 0;
    color: currentcolor;
    text-decoration-line: underline;
    text-decoration-color: currentcolor;
    text-underline-offset: 0.2rem;
    text-decoration-thickness: 0.1rem;

    &:hover,
    &:focus {
        box-shadow: none;
	color: currentcolor;
        text-decoration-line: underline;
        text-decoration-color: currentcolor;
        text-decoration-thickness: 0.3rem;
    }
}

@mixin default-img() {
    @include box-shadow(none);
    border: 0;

}



@mixin styledcontentlink() {
    cursor: pointer;
    word-wrap: break-word;
    color: var(--color-content-links);
    transition: text-decoration .1s ease;
    text-decoration-line: underline;
    text-decoration-color: var(--color-primary-ci-hell);
    text-decoration-thickness: 0.1rem;
    text-underline-offset: 0.2rem;

    &:active,
    &:focus,
    &:hover {
        text-decoration-line: underline;
        text-decoration-color: var(--color-primary-ci-hell);
        text-decoration-thickness: 0.3rem;
    }
}

@mixin buttoncolor() {
    color: var(--color-button-text);
    background-color: var(--color-button-bg);

    &:hover,
    &:focus {
        color: var(--color-button-hover-text);
        background-color: var(--color-button-hover-bg);
    }
}

@mixin buttonstyle() {
    @include inline-block;
    @include px2rem($font-size-textbuttons);
    @include buttoncolor;

    border: none;
    // padding: 0.5rem 0.7rem;
    padding: 10px 18px;
    text-decoration: none;
    border-radius: var(--border-radius-buttons, 3px);
    font-size: 1rem;
    line-height: 1.5;
    text-align: center;
    font-weight: normal;
    margin: 5px 0;



    &:hover,
    &:focus {
        text-decoration: none;
    }
}

@mixin ghostbutton($border: 1px) {
    @include inline-block;
    @include px2rem($font-size-textbuttons);

    background: transparent;
    color: var(--color-Text);
    border: $border solid var(--color-ContentBorders);
    border-radius: var(--border-radius-buttons, 3px);
    padding: 10px 18px;
    text-decoration: none;


    &:hover,
    &:focus {
        text-decoration: none;
        color: var(--color-ghostbutton-hover-text);
        background: var(--color-ghostbutton-hover-bg);
    }
}

@mixin nextlink-ghostbutton() {
    @include defaultlinkstyle();
    @include ghostbutton();
    font-weight: normal;

    &:after {
        @include svg-icon-place();
        background-image: svg-angle-right($color-content-links);
    }

    &:focus:after,
    &:hover:after {
        background-image: svg-angle-right($color-ghostbutton-hover-text);
    }
}

@mixin prevlink-ghostbutton() {
    @include defaultlinkstyle();
    @include ghostbutton();
    font-weight: normal;

    &:before {
        @include svg-icon-place();
        background-image: svg-angle-right($color-content-links);
        transform: rotate(180deg);
        transform-origin: 50% 50%;
    }

    &:focus:before,
    &:hover:before {
        background-image: svg-angle-right($color-ghostbutton-hover-text);

    }
}


@mixin removebuttoncolor() {
    background-color: unset;
    color: unset;

    &:hover,
    &:focus {
        color: unset;
        background-color: unset;
    }
}

// Set Font Style
@mixin fontFace($family, $src, $weight: normal, $style: normal, $withlocal: true) {
    @font-face {
        font-family: $family;

        @if $withlocal {
            src: local($family),
            url('#{$src}.woff2') format('woff2'),
            url('#{$src}.woff') format('woff'),
            url('#{$src}.ttf') format('truetype');
        }

        @else {
            src: url('#{$src}.woff2') format('woff2'),
            url('#{$src}.woff') format('woff'),
            url('#{$src}.ttf') format('truetype');
        }

        font-style: $style;
        font-weight: $weight;
    }
}


// Only display content to screen readers
//
// See: https://a11yproject.com/posts/how-to-hide-content/
// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/
@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    min-width: 1px;
    min-height: 1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {

    &:active,
    &:focus {
        position: static;
        width: auto;
        height: auto;
        overflow: visible;
        clip: auto;
        white-space: normal;
    }
}

// from _vendor-prefixes.scss:

// User select
// For selecting text on the page
@mixin user-select($select) {
    user-select: $select;
}

// Box sizing
@mixin box-sizing($boxmodel) {
    box-sizing: $boxmodel;
}

@mixin box-shadow($shadow...) {
    box-shadow: $shadow;
}